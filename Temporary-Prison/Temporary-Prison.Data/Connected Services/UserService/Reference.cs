//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Temporary_Prison.Data.UserService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="DataErrorDto", Namespace="http://schemas.datacontract.org/2004/07/Temporary_Prison.Service.Contracts.Dto")]
    [System.SerializableAttribute()]
    public partial class DataErrorDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorDetailsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorDetails {
            get {
                return this.ErrorDetailsField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorDetailsField, value) != true)) {
                    this.ErrorDetailsField = value;
                    this.RaisePropertyChanged("ErrorDetails");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserDto", Namespace="http://schemas.datacontract.org/2004/07/Temporary_Prison.Service.Contracts.Dto")]
    [System.SerializableAttribute()]
    public partial class UserDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] RolesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Roles {
            get {
                return this.RolesField;
            }
            set {
                if ((object.ReferenceEquals(this.RolesField, value) != true)) {
                    this.RolesField = value;
                    this.RaisePropertyChanged("Roles");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="UserService.IUserService")]
    public interface IUserService {
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.EncryptAndSign, Action="http://tempuri.org/IUserService/IsValidLogin", ReplyAction="http://tempuri.org/IUserService/IsValidLoginResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Temporary_Prison.Data.UserService.DataErrorDto), Action="http://tempuri.org/IUserService/IsValidLoginDataErrorDtoFault", ProtectionLevel=System.Net.Security.ProtectionLevel.EncryptAndSign, Name="DataErrorDto", Namespace="http://schemas.datacontract.org/2004/07/Temporary_Prison.Service.Contracts.Dto")]
        bool IsValidLogin(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.EncryptAndSign, Action="http://tempuri.org/IUserService/IsValidLogin", ReplyAction="http://tempuri.org/IUserService/IsValidLoginResponse")]
        System.Threading.Tasks.Task<bool> IsValidLoginAsync(string userName, string password);
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.EncryptAndSign, Action="http://tempuri.org/IUserService/GetUserByName", ReplyAction="http://tempuri.org/IUserService/GetUserByNameResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Temporary_Prison.Data.UserService.DataErrorDto), Action="http://tempuri.org/IUserService/GetUserByNameDataErrorDtoFault", ProtectionLevel=System.Net.Security.ProtectionLevel.EncryptAndSign, Name="DataErrorDto", Namespace="http://schemas.datacontract.org/2004/07/Temporary_Prison.Service.Contracts.Dto")]
        Temporary_Prison.Data.UserService.UserDto GetUserByName(string userName);
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.EncryptAndSign, Action="http://tempuri.org/IUserService/GetUserByName", ReplyAction="http://tempuri.org/IUserService/GetUserByNameResponse")]
        System.Threading.Tasks.Task<Temporary_Prison.Data.UserService.UserDto> GetUserByNameAsync(string userName);
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.EncryptAndSign, Action="http://tempuri.org/IUserService/GetUsersForPagedList", ReplyAction="http://tempuri.org/IUserService/GetUsersForPagedListResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Temporary_Prison.Data.UserService.DataErrorDto), Action="http://tempuri.org/IUserService/GetUsersForPagedListDataErrorDtoFault", ProtectionLevel=System.Net.Security.ProtectionLevel.EncryptAndSign, Name="DataErrorDto", Namespace="http://schemas.datacontract.org/2004/07/Temporary_Prison.Service.Contracts.Dto")]
        Temporary_Prison.Data.UserService.GetUsersForPagedListResponse GetUsersForPagedList(Temporary_Prison.Data.UserService.GetUsersForPagedListRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.EncryptAndSign, Action="http://tempuri.org/IUserService/GetUsersForPagedList", ReplyAction="http://tempuri.org/IUserService/GetUsersForPagedListResponse")]
        System.Threading.Tasks.Task<Temporary_Prison.Data.UserService.GetUsersForPagedListResponse> GetUsersForPagedListAsync(Temporary_Prison.Data.UserService.GetUsersForPagedListRequest request);
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.Sign, Action="http://tempuri.org/IUserService/GetAllRoles", ReplyAction="http://tempuri.org/IUserService/GetAllRolesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Temporary_Prison.Data.UserService.DataErrorDto), Action="http://tempuri.org/IUserService/GetAllRolesDataErrorDtoFault", ProtectionLevel=System.Net.Security.ProtectionLevel.Sign, Name="DataErrorDto", Namespace="http://schemas.datacontract.org/2004/07/Temporary_Prison.Service.Contracts.Dto")]
        string[] GetAllRoles();
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.Sign, Action="http://tempuri.org/IUserService/GetAllRoles", ReplyAction="http://tempuri.org/IUserService/GetAllRolesResponse")]
        System.Threading.Tasks.Task<string[]> GetAllRolesAsync();
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.EncryptAndSign, Action="http://tempuri.org/IUserService/AddUser", ReplyAction="http://tempuri.org/IUserService/AddUserResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Temporary_Prison.Data.UserService.DataErrorDto), Action="http://tempuri.org/IUserService/AddUserDataErrorDtoFault", ProtectionLevel=System.Net.Security.ProtectionLevel.EncryptAndSign, Name="DataErrorDto", Namespace="http://schemas.datacontract.org/2004/07/Temporary_Prison.Service.Contracts.Dto")]
        void AddUser(Temporary_Prison.Data.UserService.UserDto user);
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.EncryptAndSign, Action="http://tempuri.org/IUserService/AddUser", ReplyAction="http://tempuri.org/IUserService/AddUserResponse")]
        System.Threading.Tasks.Task AddUserAsync(Temporary_Prison.Data.UserService.UserDto user);
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.EncryptAndSign, Action="http://tempuri.org/IUserService/EditUser", ReplyAction="http://tempuri.org/IUserService/EditUserResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Temporary_Prison.Data.UserService.DataErrorDto), Action="http://tempuri.org/IUserService/EditUserDataErrorDtoFault", ProtectionLevel=System.Net.Security.ProtectionLevel.EncryptAndSign, Name="DataErrorDto", Namespace="http://schemas.datacontract.org/2004/07/Temporary_Prison.Service.Contracts.Dto")]
        void EditUser(Temporary_Prison.Data.UserService.UserDto user);
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.EncryptAndSign, Action="http://tempuri.org/IUserService/EditUser", ReplyAction="http://tempuri.org/IUserService/EditUserResponse")]
        System.Threading.Tasks.Task EditUserAsync(Temporary_Prison.Data.UserService.UserDto user);
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.Sign, Action="http://tempuri.org/IUserService/DeleteUser", ReplyAction="http://tempuri.org/IUserService/DeleteUserResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Temporary_Prison.Data.UserService.DataErrorDto), Action="http://tempuri.org/IUserService/DeleteUserDataErrorDtoFault", ProtectionLevel=System.Net.Security.ProtectionLevel.Sign, Name="DataErrorDto", Namespace="http://schemas.datacontract.org/2004/07/Temporary_Prison.Service.Contracts.Dto")]
        void DeleteUser(string userName);
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.Sign, Action="http://tempuri.org/IUserService/DeleteUser", ReplyAction="http://tempuri.org/IUserService/DeleteUserResponse")]
        System.Threading.Tasks.Task DeleteUserAsync(string userName);
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.Sign, Action="http://tempuri.org/IUserService/IsExistsByLogin", ReplyAction="http://tempuri.org/IUserService/IsExistsByLoginResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Temporary_Prison.Data.UserService.DataErrorDto), Action="http://tempuri.org/IUserService/IsExistsByLoginDataErrorDtoFault", ProtectionLevel=System.Net.Security.ProtectionLevel.Sign, Name="DataErrorDto", Namespace="http://schemas.datacontract.org/2004/07/Temporary_Prison.Service.Contracts.Dto")]
        bool IsExistsByLogin(string userName);
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.Sign, Action="http://tempuri.org/IUserService/IsExistsByLogin", ReplyAction="http://tempuri.org/IUserService/IsExistsByLoginResponse")]
        System.Threading.Tasks.Task<bool> IsExistsByLoginAsync(string userName);
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.Sign, Action="http://tempuri.org/IUserService/IsExistsByEmail", ReplyAction="http://tempuri.org/IUserService/IsExistsByEmailResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Temporary_Prison.Data.UserService.DataErrorDto), Action="http://tempuri.org/IUserService/IsExistsByEmailDataErrorDtoFault", ProtectionLevel=System.Net.Security.ProtectionLevel.Sign, Name="DataErrorDto", Namespace="http://schemas.datacontract.org/2004/07/Temporary_Prison.Service.Contracts.Dto")]
        bool IsExistsByEmail(string email);
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.Sign, Action="http://tempuri.org/IUserService/IsExistsByEmail", ReplyAction="http://tempuri.org/IUserService/IsExistsByEmailResponse")]
        System.Threading.Tasks.Task<bool> IsExistsByEmailAsync(string email);
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.Sign, Action="http://tempuri.org/IUserService/RemoveFromRoles", ReplyAction="http://tempuri.org/IUserService/RemoveFromRolesResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Temporary_Prison.Data.UserService.DataErrorDto), Action="http://tempuri.org/IUserService/RemoveFromRolesDataErrorDtoFault", ProtectionLevel=System.Net.Security.ProtectionLevel.Sign, Name="DataErrorDto", Namespace="http://schemas.datacontract.org/2004/07/Temporary_Prison.Service.Contracts.Dto")]
        void RemoveFromRoles(string userName, string roleName);
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.Sign, Action="http://tempuri.org/IUserService/RemoveFromRoles", ReplyAction="http://tempuri.org/IUserService/RemoveFromRolesResponse")]
        System.Threading.Tasks.Task RemoveFromRolesAsync(string userName, string roleName);
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.Sign, Action="http://tempuri.org/IUserService/AddToRole", ReplyAction="http://tempuri.org/IUserService/AddToRoleResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Temporary_Prison.Data.UserService.DataErrorDto), Action="http://tempuri.org/IUserService/AddToRoleDataErrorDtoFault", ProtectionLevel=System.Net.Security.ProtectionLevel.Sign, Name="DataErrorDto", Namespace="http://schemas.datacontract.org/2004/07/Temporary_Prison.Service.Contracts.Dto")]
        void AddToRole(string userName, string roleName);
        
        [System.ServiceModel.OperationContractAttribute(ProtectionLevel=System.Net.Security.ProtectionLevel.Sign, Action="http://tempuri.org/IUserService/AddToRole", ReplyAction="http://tempuri.org/IUserService/AddToRoleResponse")]
        System.Threading.Tasks.Task AddToRoleAsync(string userName, string roleName);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUsersForPagedList", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetUsersForPagedListRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public int skip;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int rowSize;
        
        public GetUsersForPagedListRequest() {
        }
        
        public GetUsersForPagedListRequest(int skip, int rowSize) {
            this.skip = skip;
            this.rowSize = rowSize;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="GetUsersForPagedListResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class GetUsersForPagedListResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public Temporary_Prison.Data.UserService.UserDto[] GetUsersForPagedListResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int totalCountUsers;
        
        public GetUsersForPagedListResponse() {
        }
        
        public GetUsersForPagedListResponse(Temporary_Prison.Data.UserService.UserDto[] GetUsersForPagedListResult, int totalCountUsers) {
            this.GetUsersForPagedListResult = GetUsersForPagedListResult;
            this.totalCountUsers = totalCountUsers;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserServiceChannel : Temporary_Prison.Data.UserService.IUserService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserServiceClient : System.ServiceModel.ClientBase<Temporary_Prison.Data.UserService.IUserService>, Temporary_Prison.Data.UserService.IUserService {
        
        public UserServiceClient() {
        }
        
        public UserServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool IsValidLogin(string userName, string password) {
            return base.Channel.IsValidLogin(userName, password);
        }
        
        public System.Threading.Tasks.Task<bool> IsValidLoginAsync(string userName, string password) {
            return base.Channel.IsValidLoginAsync(userName, password);
        }
        
        public Temporary_Prison.Data.UserService.UserDto GetUserByName(string userName) {
            return base.Channel.GetUserByName(userName);
        }
        
        public System.Threading.Tasks.Task<Temporary_Prison.Data.UserService.UserDto> GetUserByNameAsync(string userName) {
            return base.Channel.GetUserByNameAsync(userName);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Temporary_Prison.Data.UserService.GetUsersForPagedListResponse Temporary_Prison.Data.UserService.IUserService.GetUsersForPagedList(Temporary_Prison.Data.UserService.GetUsersForPagedListRequest request) {
            return base.Channel.GetUsersForPagedList(request);
        }
        
        public Temporary_Prison.Data.UserService.UserDto[] GetUsersForPagedList(int skip, int rowSize, out int totalCountUsers) {
            Temporary_Prison.Data.UserService.GetUsersForPagedListRequest inValue = new Temporary_Prison.Data.UserService.GetUsersForPagedListRequest();
            inValue.skip = skip;
            inValue.rowSize = rowSize;
            Temporary_Prison.Data.UserService.GetUsersForPagedListResponse retVal = ((Temporary_Prison.Data.UserService.IUserService)(this)).GetUsersForPagedList(inValue);
            totalCountUsers = retVal.totalCountUsers;
            return retVal.GetUsersForPagedListResult;
        }
        
        public System.Threading.Tasks.Task<Temporary_Prison.Data.UserService.GetUsersForPagedListResponse> GetUsersForPagedListAsync(Temporary_Prison.Data.UserService.GetUsersForPagedListRequest request) {
            return base.Channel.GetUsersForPagedListAsync(request);
        }
        
        public string[] GetAllRoles() {
            return base.Channel.GetAllRoles();
        }
        
        public System.Threading.Tasks.Task<string[]> GetAllRolesAsync() {
            return base.Channel.GetAllRolesAsync();
        }
        
        public void AddUser(Temporary_Prison.Data.UserService.UserDto user) {
            base.Channel.AddUser(user);
        }
        
        public System.Threading.Tasks.Task AddUserAsync(Temporary_Prison.Data.UserService.UserDto user) {
            return base.Channel.AddUserAsync(user);
        }
        
        public void EditUser(Temporary_Prison.Data.UserService.UserDto user) {
            base.Channel.EditUser(user);
        }
        
        public System.Threading.Tasks.Task EditUserAsync(Temporary_Prison.Data.UserService.UserDto user) {
            return base.Channel.EditUserAsync(user);
        }
        
        public void DeleteUser(string userName) {
            base.Channel.DeleteUser(userName);
        }
        
        public System.Threading.Tasks.Task DeleteUserAsync(string userName) {
            return base.Channel.DeleteUserAsync(userName);
        }
        
        public bool IsExistsByLogin(string userName) {
            return base.Channel.IsExistsByLogin(userName);
        }
        
        public System.Threading.Tasks.Task<bool> IsExistsByLoginAsync(string userName) {
            return base.Channel.IsExistsByLoginAsync(userName);
        }
        
        public bool IsExistsByEmail(string email) {
            return base.Channel.IsExistsByEmail(email);
        }
        
        public System.Threading.Tasks.Task<bool> IsExistsByEmailAsync(string email) {
            return base.Channel.IsExistsByEmailAsync(email);
        }
        
        public void RemoveFromRoles(string userName, string roleName) {
            base.Channel.RemoveFromRoles(userName, roleName);
        }
        
        public System.Threading.Tasks.Task RemoveFromRolesAsync(string userName, string roleName) {
            return base.Channel.RemoveFromRolesAsync(userName, roleName);
        }
        
        public void AddToRole(string userName, string roleName) {
            base.Channel.AddToRole(userName, roleName);
        }
        
        public System.Threading.Tasks.Task AddToRoleAsync(string userName, string roleName) {
            return base.Channel.AddToRoleAsync(userName, roleName);
        }
    }
}
