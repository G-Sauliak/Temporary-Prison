//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Temporary_Prison.Data.PrisonService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PrisonService.IPrisonerService")]
    public interface IPrisonerService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPrisonerService/GetPrisoners", ReplyAction="http://tempuri.org/IPrisonerService/GetPrisonersResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Temporary_Prison.Service.Contracts.Dto.DataErrorDto), Action="http://tempuri.org/IPrisonerService/GetPrisonersDataErrorDtoFault", Name="DataErrorDto", Namespace="http://schemas.datacontract.org/2004/07/Temporary_Prison.Service.Contracts.Dto")]
        Temporary_Prison.Service.Contracts.Dto.PrisonerDto[] GetPrisoners();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPrisonerService/GetPrisoners", ReplyAction="http://tempuri.org/IPrisonerService/GetPrisonersResponse")]
        System.Threading.Tasks.Task<Temporary_Prison.Service.Contracts.Dto.PrisonerDto[]> GetPrisonersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPrisonerService/GetPrisonerById", ReplyAction="http://tempuri.org/IPrisonerService/GetPrisonerByIdResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Temporary_Prison.Service.Contracts.Dto.DataErrorDto), Action="http://tempuri.org/IPrisonerService/GetPrisonerByIdDataErrorDtoFault", Name="DataErrorDto", Namespace="http://schemas.datacontract.org/2004/07/Temporary_Prison.Service.Contracts.Dto")]
        Temporary_Prison.Service.Contracts.Dto.PrisonerDto GetPrisonerById(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPrisonerService/GetPrisonerById", ReplyAction="http://tempuri.org/IPrisonerService/GetPrisonerByIdResponse")]
        System.Threading.Tasks.Task<Temporary_Prison.Service.Contracts.Dto.PrisonerDto> GetPrisonerByIdAsync(int Id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPrisonerService/TryAddPrisoner", ReplyAction="http://tempuri.org/IPrisonerService/TryAddPrisonerResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(Temporary_Prison.Service.Contracts.Dto.DataErrorDto), Action="http://tempuri.org/IPrisonerService/TryAddPrisonerDataErrorDtoFault", Name="DataErrorDto", Namespace="http://schemas.datacontract.org/2004/07/Temporary_Prison.Service.Contracts.Dto")]
        Temporary_Prison.Data.PrisonService.TryAddPrisonerResponse TryAddPrisoner(Temporary_Prison.Data.PrisonService.TryAddPrisonerRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IPrisonerService/TryAddPrisoner", ReplyAction="http://tempuri.org/IPrisonerService/TryAddPrisonerResponse")]
        System.Threading.Tasks.Task<Temporary_Prison.Data.PrisonService.TryAddPrisonerResponse> TryAddPrisonerAsync(Temporary_Prison.Data.PrisonService.TryAddPrisonerRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="TryAddPrisoner", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class TryAddPrisonerRequest {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public Temporary_Prison.Service.Contracts.Dto.PrisonerDto prisoner;
        
        public TryAddPrisonerRequest() {
        }
        
        public TryAddPrisonerRequest(Temporary_Prison.Service.Contracts.Dto.PrisonerDto prisoner) {
            this.prisoner = prisoner;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="TryAddPrisonerResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class TryAddPrisonerResponse {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public bool TryAddPrisonerResult;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
        public int newId;
        
        public TryAddPrisonerResponse() {
        }
        
        public TryAddPrisonerResponse(bool TryAddPrisonerResult, int newId) {
            this.TryAddPrisonerResult = TryAddPrisonerResult;
            this.newId = newId;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IPrisonerServiceChannel : Temporary_Prison.Data.PrisonService.IPrisonerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PrisonerServiceClient : System.ServiceModel.ClientBase<Temporary_Prison.Data.PrisonService.IPrisonerService>, Temporary_Prison.Data.PrisonService.IPrisonerService {
        
        public PrisonerServiceClient() {
        }
        
        public PrisonerServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PrisonerServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PrisonerServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PrisonerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public Temporary_Prison.Service.Contracts.Dto.PrisonerDto[] GetPrisoners() {
            return base.Channel.GetPrisoners();
        }
        
        public System.Threading.Tasks.Task<Temporary_Prison.Service.Contracts.Dto.PrisonerDto[]> GetPrisonersAsync() {
            return base.Channel.GetPrisonersAsync();
        }
        
        public Temporary_Prison.Service.Contracts.Dto.PrisonerDto GetPrisonerById(int Id) {
            return base.Channel.GetPrisonerById(Id);
        }
        
        public System.Threading.Tasks.Task<Temporary_Prison.Service.Contracts.Dto.PrisonerDto> GetPrisonerByIdAsync(int Id) {
            return base.Channel.GetPrisonerByIdAsync(Id);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Temporary_Prison.Data.PrisonService.TryAddPrisonerResponse Temporary_Prison.Data.PrisonService.IPrisonerService.TryAddPrisoner(Temporary_Prison.Data.PrisonService.TryAddPrisonerRequest request) {
            return base.Channel.TryAddPrisoner(request);
        }
        
        public bool TryAddPrisoner(Temporary_Prison.Service.Contracts.Dto.PrisonerDto prisoner, out int newId) {
            Temporary_Prison.Data.PrisonService.TryAddPrisonerRequest inValue = new Temporary_Prison.Data.PrisonService.TryAddPrisonerRequest();
            inValue.prisoner = prisoner;
            Temporary_Prison.Data.PrisonService.TryAddPrisonerResponse retVal = ((Temporary_Prison.Data.PrisonService.IPrisonerService)(this)).TryAddPrisoner(inValue);
            newId = retVal.newId;
            return retVal.TryAddPrisonerResult;
        }
        
        public System.Threading.Tasks.Task<Temporary_Prison.Data.PrisonService.TryAddPrisonerResponse> TryAddPrisonerAsync(Temporary_Prison.Data.PrisonService.TryAddPrisonerRequest request) {
            return base.Channel.TryAddPrisonerAsync(request);
        }
    }
}
