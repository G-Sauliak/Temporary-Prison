@model Temporary_Prison.Models.CreateOrUpdatePrisonerViewModel
@using Temporary_Prison.Enums

@{
    ViewBag.Title = "Edit Prisoner";
}

<h2>EditPrisoner</h2>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>

@using (Html.BeginForm("EditPrisoner", "Editor", new { RedirectUrl = ViewBag.RedirectUrl }, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal col-md-10">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <hr />
        @Html.HiddenFor(model => model.PrisonerID)
        <div class="form-group">
            <div class="col-md-10 col-lg-6">
                @Html.LabelFor(model => model.Photo, htmlAttributes: new { @class = "control-label control-label col-md-2", })
                <div class="col-sm-6 col-lg-offset-2 col-lg-8">
                    @Html.Avatar(Model.Photo, new { @class = "img-thumbnail" })
                    @Html.EditorFor(model => model.Photo, new { htmlAttributes = new { @class = "form-control", type = "file", id = "photoUpload" } })
                </div>
                @Html.ValidationMessageFor(model => model.Photo, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Surname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Surname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Surname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PhoneNumbers, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @for (int i = 0; i < Model.PhoneNumbers.Count; i++)
                {
                    <p class="number" id="@i">
                        @Html.EditorFor(model => model.PhoneNumbers[i], "Phones", "PhoneNumbers",
                       new
                       {
                           htmlAttributes =
                           new
                           {
                               @class = "form-control text-box single-line valid",
                               @data_val = "true",
                               @data_val_required = "input phone number"
                           }
                       })
                    </p>
                }
                @Html.ValidationMessageFor(model => model.PhoneNumbers, "", new { @class = "text-danger" })
                <div class="form-inline">
                <a href="javascript:window.phone.AddPhone();" class="add_phone">Add more</a> &nbsp;
                <a href="javascript:window.phone.RemovePhone();" class="delete_phone">Remove</a></div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RelationshipStatus, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.RelationshipStatus, EnumHelper.GetSelectList(typeof(RelationshipStatus)), "Select Relationship Status", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.RelationshipStatus, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.PlaceOfWork, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.PlaceOfWork, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.PlaceOfWork, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BirthDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BirthDate, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AdditionalInformation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AdditionalInformation, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AdditionalInformation, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Edit" class="btn btn-default" />
            </div>
        </div>
    </div>
}
<div>
    @Html.ActionLink("Back to List", "ListOfPrisoners", "Prisoner", "", new { @class = "btn btn-default" })
</div>

@section scripts
{

    <script src="~/Scripts/Phone/phoneNumbers.js"></script>
    <script>window.phone = window.MultiplePhones()</script>
}




